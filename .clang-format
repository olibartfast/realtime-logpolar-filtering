# Clang-Format configuration for realtime-logpolar-filtering
# Based on C++ Core Guidelines and modern C++ practices

BasedOnStyle: Google

# Language and standard
Language: Cpp
Standard: c++17

# Indentation
IndentWidth: 4
TabWidth: 4
UseTab: Never
IndentCaseLabels: true
IndentPPDirectives: BeforeHash
IndentWrappedFunctionNames: false
IndentAccessModifiers: false
AccessModifierOffset: -2

# Line length and breaking
ColumnLimit: 100
BreakBeforeBraces: Attach
BreakBeforeTernaryOperators: true
BreakConstructorInitializers: BeforeColon
BreakInheritanceList: BeforeColon
BreakStringLiterals: true
AlwaysBreakAfterReturnType: None
AlwaysBreakAfterDefinitionReturnType: None
AlwaysBreakBeforeMultilineStrings: false

# Function and parameter formatting
AllowShortFunctionsOnASingleLine: Empty
AllowShortIfStatementsOnASingleLine: Never
AllowShortLoopsOnASingleLine: false
AllowShortCaseLabelsOnASingleLine: false
AllowShortBlocksOnASingleLine: Empty
BinPackArguments: false
BinPackParameters: false

# Alignment
AlignAfterOpenBracket: Align
AlignConsecutiveAssignments: false
AlignConsecutiveDeclarations: false
AlignConsecutiveMacros: false
AlignEscapedNewlines: Left
AlignOperands: true
AlignTrailingComments: true

# Spacing
SpaceAfterCStyleCast: false
SpaceAfterLogicalNot: false
SpaceAfterTemplateKeyword: true
SpaceBeforeAssignmentOperators: true
SpaceBeforeCpp11BracedList: false
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: true
SpaceBeforeParens: ControlStatements
SpaceBeforeRangeBasedForLoopColon: true
SpaceInEmptyParentheses: false
SpacesBeforeTrailingComments: 2
SpacesInAngles: false
SpacesInCStyleCastParentheses: false
SpacesInContainerLiterals: true
SpacesInParentheses: false
SpacesInSquareBrackets: false

# Pointer and reference alignment
PointerAlignment: Left
ReferenceAlignment: Left

# Include sorting
SortIncludes: true
IncludeBlocks: Regroup
IncludeCategories:
  # Main header file
  - Regex: '^".*\.h(pp)?$'
    Priority: 1
  # Project headers
  - Regex: '^"rtlp/.*'
    Priority: 2
  # Third-party libraries
  - Regex: '^<opencv2/.*'
    Priority: 3
  - Regex: '^<cuda.*'
    Priority: 4
  # Standard library
  - Regex: '^<.*'
    Priority: 5

# Namespace formatting
NamespaceIndentation: None
CompactNamespaces: false
FixNamespaceComments: true

# Constructor and initializer list formatting
ConstructorInitializerAllOnOneLineOrOnePerLine: false
ConstructorInitializerIndentWidth: 4

# Other formatting options
AllowAllArgumentsOnNextLine: false
AllowAllConstructorInitializersOnNextLine: false
AllowAllParametersOfDeclarationOnNextLine: false
Cpp11BracedListStyle: true
DerivePointerAlignment: false
ExperimentalAutoDetectBinPacking: false
KeepEmptyLinesAtTheStartOfBlocks: false
MaxEmptyLinesToKeep: 1
ReflowComments: true
SortUsingDeclarations: true

# Penalty settings for line breaking decisions
PenaltyBreakAssignment: 2
PenaltyBreakBeforeFirstCallParameter: 19
PenaltyBreakComment: 300
PenaltyBreakFirstLessLess: 120
PenaltyBreakString: 1000
PenaltyExcessCharacter: 1000000
PenaltyReturnTypeOnItsOwnLine: 60

# Disable formatting for specific sections
DisableFormat: false
